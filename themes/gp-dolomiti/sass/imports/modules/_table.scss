//  ---------------------------------------------------------------------------
//
//  Visual styles for tables
//
//  ---------------------------------------------------------------------------

	.table
	{
		// Override basic table properties and
		// make it behave like a normal block
		// element on mobile devices
		display:block;
		width:100%;
		padding:0;
		border-collapse:collapse;
		@include rem(line-height, $bodyLineHeight);


		// Override basic table properties
		thead, tbody, tr, td, th
		{
			display:block;
			vertical-align:top;
		}

		// Hide table headers (but not display: none;, for accessibility)
		thead
		{
			position:absolute;
			left:-9999em;
			font-family:$headingsFontFamily;
			font-weight:$boldFontWeight;
		}
		
		tr 
		{
			// Account for bottom border to keep vertical rhythm
			@include rem(padding, $doubleSpace 0 $doubleSpace - .1);
			border-bottom:1px solid $tableBorderColor;

			&:nth-child(2n)
			{
				@include background($table2ndBackgroundColor);
			}

			&:hover
			{
				@include background($table2ndHoverBackgroundColor);
			}

			&.table__row--selected
			{	
				border:0 solid $table2ndBorderColor;
				@include rem(border-width, $borderMedium);
				box-shadow: inset 0 3px 2px -1px rgba(0, 0, 0, 0.1), inset 0 -3px 2px -1px rgba(0, 0, 0, 0.1);
				// box-shadow: inset 0 3px 3px -1px rgba(90, 191, 224, 0.2), inset 0 -3px 3px -1px rgba(90, 191, 224, 0.2);
				//box-shadow: inset 0 3px 2px -1px rgba(0, 0, 0, 0.3), inset 0 -3px 2px -2px rgba(0, 0, 0, 0.3);
				@include background($table2ndBackgroundColor);		
			}

			&.table__row--lastedited
			{
				@include background($tableLasteditedBackgroundColor);
			}

			&.table__row--disabled
			{
				@include background($tableDisabledBackgroundColor);
				color:$tableDisabledTextColor;
			}

			&.table__row--divider
			{
				font-family:$headingsFontFamily;
				font-weight:$boldFontWeight;

				border-bottom:2px solid $tableDividerBorderColor;
				border-top:2px solid $tableDividerBorderColor;
				@include background($tableBackgroundColor);
			}

			
		}

		td 
		{ 
			// Make it a positioning container
			position:relative;
			// Behave  like a "row"
			border:none;
			padding:0;
			// Make some room for the labels
			// on the left side. (They will 
			// be injected via pseudo element)
			padding-left:50%; 
		}
		
		td::before 
		{
			// Now like a table header
			position: absolute;
			left:0;
			width: 45%; 
			white-space:nowrap;
			font-family:$headingsFontFamily;
			font-weight:$boldFontWeight;
		}
		
		// Label the data
		td:nth-child(1):before { content: "First Name"; }
		td:nth-child(2):before { content: "Last Name"; }
		td:nth-child(3):before { content: "Job Title"; }
		td:nth-child(4):before { content: "Favorite Color"; }
		td:nth-child(5):before { content: "Wars of Trek?"; }
		td:nth-child(6):before { content: "Porn Name"; }
		td:nth-child(7):before { content: "Date of Birth"; }


	//  = HUGE SCREEN
	//  ---------------------------------------------------------------------------

		@include at-breakpoint($huge-width no-mq)
		{
			// Reset the display property to
			// make the table act like a table again
			display:table;

			thead, tbody
			{
				display:table-row-group;
				position:static;
			}

			tr:last-child
			{
				border-bottom-width:2px;
				border-bottom-color:$tableDividerBorderColor;

				td 
				{
					// Account for borders
					@include rem(padding, $singleSpace - .1 .2);
				}
			}

			tr
			{
				display:table-row;

				&.table__row--selected
				{

					border:0 solid $tableSelectedBorderColor;
					@include rem(border-width, $borderMedium);

					td 
					{
						box-shadow: inset 0 3px 2px -1px rgba(0, 0, 0, 0.1), inset 0 -3px 2px -1px rgba(0, 0, 0, 0.1);
						// box-shadow: inset 0 3px 3px -1px rgba(90, 191, 224, 0.2), inset 0 -3px 3px -1px rgba(90, 191, 224, 0.2);
						//box-shadow: inset 0 3px 2px -1px rgba(0, 0, 0, 0.3), inset 0 -3px 2px -2px rgba(0, 0, 0, 0.3);
						@include background($tableSelectedBackgroundColor);
						border-top:1px solid $tableSelectedShadowColor;
						border-bottom:1px solid $tableSelectedShadowColor;
					}
				}
			}


			th, td
			{ 
				display:table-cell;
				width:auto;
				@include rem(padding, $singleSpace - .1 .2 $singleSpace);
				text-align:left;
			}

			// Hide the pseudo labels
			td::before 
			{
				display:none;
			}

			&.table--condensed
			{

				th, td
				{
					@include rem(padding, $singleSpace / 2 - .1 .2 $singleSpace / 2);
					@include rem(font-size, $bodyFontSize - 0.1);
				}

				tr:last-child
				{
					td 
					{
						// Account for borders
						@include rem(padding, $singleSpace / 2 - .1 .2);
					}
				}
			}
		}	
	
	}

	

