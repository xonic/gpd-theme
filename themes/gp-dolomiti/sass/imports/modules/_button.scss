//  ---------------------------------------------------------------------------
//
//  Button styles for <a>, <input type="submit">, <input type="button" and
//	<button> elements
//
//  ---------------------------------------------------------------------------

	// Basic button styling
	.btn,
	%btn
	{
		display:inline-block;

		// Fix alignment
		vertical-align:baseline;

		@include rem(padding, $baseLineHeight - $borderThin $singleSpace);

		// Set margins & paddings to 
		// establish vertical rhythm
		@include rem(margin, 0 $singleSpace $doubleSpace 0);

		// Set borders & background
		border:0 solid $btnBorderColor;
		@include rem(border-width, $borderThin);
		border-radius:$btnBorderRadius;

		// No gradient fallback
		background:$btnColorDark;
		@include gradient-vertical($btnColorLight, $btnColorDark);
		
		// Set text properties
		text-align:center;
		color:$btnFontColor;
		@include rem(font-size, $btnFontSize);

		// Set transition properties
		@include transition(all, .1s);

		cursor:pointer;
		white-space:normal;

		// In hover state the normally
		// quite flat button will pop
		// out a little bit.
		&:hover,
		&:focus
		{
			// Make it look more like a beveled button
			@include gradient-vertical(lighten($btnColorLight, 1%), darken($btnColorDark, 1%));

			// Give shadow and highlight depths to the button
			box-shadow:0 1px 1px rgba(0,0,0,.1),						// outer color glow
					   inset 0 1px 0 rgba(255,255,255,.2);				// inner white top highlight

			// Override a:hover font color change
			color:$btnFontColor;
			outline:0 none;
		}

		&:active
		{
			// Give the button a slight pressed effect
			@include gradient-vertical($btnColorDark, $btnColorLight);
			box-shadow:	inset 0 1px 3px rgba(0,0,0,.1);					// inner dark shadow
		}

		@include at-breakpoint($medium-width $medium-cols) 
		{ 
			@include setType($bodyFontSize--medium, $inputHeight--medium);
			@include rem(min-height, $inputHeight--medium);
			@include rem(padding, $baseLineHeight - $borderThin $doubleSpace);
		}

		@include at-breakpoint($large-width $large-cols) 
		{ 
			@include setType($bodyFontSize--large, $inputHeight--large);
			@include rem(min-height, $inputHeight--large);
		}
		
		@include at-breakpoint($huge-width $huge-cols) 
		{ 
			@include setType($bodyFontSize--huge, $inputHeight--huge);
			@include rem(min-height, $inputHeight--huge);
		}
		
		@include at-breakpoint($giant-width $giant-cols) 
		{ 
			@include setType($bodyFontSize--giant, $inputHeight--giant);
			@include rem(min-height, $inputHeight--giant);
			@include rem(padding, $baseLineHeight - $borderThin $doubleSpace * 1.5);
		}
		
		@include at-breakpoint($monstrous-width $monstrous-cols) 
		{ 
			@include setType($bodyFontSize--monstrous, $inputHeight--monstrous);
			@include rem(min-height, $inputHeight--monstrous);
		}
	}


//  = BUTTONS WITH ICONS
//  ---------------------------------------------------------------------------

	.btn--with-icon
	{
		[class*="icon-"]
		{
			@include rem(margin-right, $singleSpace / 2);
			@include rem(font-size, $bodyFontSize);
		}
	}



//  = BUTTON SIZES
//  ---------------------------------------------------------------------------

	.btn--large
	{
		@include rem(padding, $bodyLineHeight - $borderThin $doubleSpace);
		@include rem(font-size, $btnLargeFontSize);
	}

	.btn--huge
	{
		@include rem(padding, $baseLineHeight * 3 - $borderThin $doubleSpace * 2);
		@include setType($btnHugeFontSize, $baseLineHeight * 3);
	}



//  = BUTTON ALIGNMENT
//  ---------------------------------------------------------------------------

	.btn--right-aligned
	{
		// If the button is the aligned on the 
		// right side it should not have a margin
		margin-right:0;
	}




//  = BUTTON TYPES
//  ---------------------------------------------------------------------------

	// Colored buttons
	.btn--primary
	{
		border-color:$btnPrimaryBorderColor;
	
		// No gradient fallback
		background:$btnPrimaryColorLight;
		@include gradient-vertical($btnPrimaryColorLight, $btnPrimaryColorDark);

		color:$textColor;

		&:hover
		{
			// Make it look more like a beveled button
			@include gradient-vertical(lighten($btnPrimaryColorLight, 2%), darken($btnPrimaryColorDark, 2%));

			// Give shadow and highlight depths to the button
			box-shadow:0 1px 3px rgba(0,0,0,.2),						// outer color glow
					   inset 0 1px 0 rgba(255,255,255,.2);				// inner white top highlight

			// Add some depth to the text
			text-shadow:0 1px 1px rgba(0,0,0,.3);

			// Override a:hover font color change
			color:$btnPrimaryFontColor;
		}

		&:active
		{
			// Give the button a slight pressed effect
			@include gradient-vertical($btnPrimaryColorDark, $btnPrimaryColorLight);
			box-shadow:	inset 0 1px 3px rgba(0,0,0,.1);					// inner dark shadow
		}
	}

	.btn--success
	{
		border-color:$btnSuccessBorderColor;
		
		// No gradient fallback
		background:$btnSuccessColorLight;
		@include gradient-vertical($btnSuccessColorLight, $btnSuccessColorDark);

		color:$btnSuccessFontColor;

		&:hover
		{
			// Make it look more like a beveled button
			@include gradient-vertical(lighten($btnSuccessColorLight, 2%), darken($btnSuccessColorDark, 2%));

			// Give shadow and highlight depths to the button
			box-shadow:0 1px 3px rgba(0,0,0,.2),						// outer color glow
					   inset 0 1px 0 rgba(255,255,255,.2);				// inner white top highlight

			// Add some depth to the text
			text-shadow:0 1px 1px rgba(255,255,255,.5);

			// Override a:hover font color change
			color:$btnSuccessFontColor;
		}

		&:active
		{
			// Give the button a slight pressed effect
			@include gradient-vertical($btnSuccessColorDark, $btnSuccessColorLight);
			box-shadow:	inset 0 1px 3px rgba(0,0,0,.1);					// inner dark shadow
		}
	}

//  = BUTTON GROUP
//  ---------------------------------------------------------------------------	

	.btn-group
	{
		.btn-group__btn
		{
			@extend .btn;
			border-radius:0;
			margin-right:0;
			float:left;

			&:first-child
			{
				@include border-left-radius;
				border-right-width:0;
			}

			&:last-child
			{
				@include border-right-radius;
				@include rem(margin-right, $singleSpace);
				border-left-width:0;
			}
		}
	}

//  = BUTTON DROPDOWN
//  ---------------------------------------------------------------------------	

	.btn-dropdown
	{

		position:relative;
		display:inline-block;

		.btn-dropdown__toggle
		{
			@extend .btn;
			//@include rem(margin-bottom, $singleSpace);
		}

		.btn-dropdown__menu
		{
			display:none;
			position:absolute;
			top:100%;
			left:0;
			z-index:1000;
			@include rem(margin-top, -$doubleSpace);
			@include rem(padding, $baseLineHeight - $borderThin 0);

			border:0 solid $grayVeryLight;
			@include rem(border-width, $borderThin);
			
			@include background($white);
			
			// Fix alignment
			vertical-align:baseline;
			box-shadow:1px 2px 1px rgba(0,0,0,.1);
			list-style:none;

			a
			{
				display:block;
				cursor:pointer;
				@include rem(padding, 0 $singleSpace);
			}

		}
	}

	.open 
	{
  		*z-index: 1000;
  		
		& > .btn-dropdown__menu 
		{
			display: block;
		}
	}



//  = SPECIAL NEWSLETTER BUTTON
//  ---------------------------------------------------------------------------	

	.btn--newsletter
	{
		min-height:0;
		@include rem(margin, 0 0 $doubleSpace * 2);
		border:0 none;
		border-radius:8px;
		background-color:$orange;
		@include background(linear-gradient(lighten($secondaryAccent, 5%), $secondaryAccent));
		filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#fec44d,endColorstr=#febb33); 
       	zoom: 1;
		box-shadow:inset 0 1px rgba(255,255,255,.5),
				   0 5px darken($orange, 35%),
				   0 5px 0 2px  rgba(0,0,0,.8),
				   0 10px 20px 3px rgba(0,0,0,.3);			   
		font-family:$headingsFontFamily;
		text-transform:uppercase;
		@include setType($h2Size, $h2LineHeight);
		text-shadow:0 1px rgba(255,255,255,.5);
		@include transition(all .05s linear);

		&:hover,
		&:focus
		{
			background-color:$orange;
			@include background(linear-gradient(lighten($secondaryAccent, 7%), lighten($secondaryAccent, 2%)));
			filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#fec758,endColorstr=#febf3e); 
			box-shadow:inset 0 1px rgba(255,255,255,.5),
					   0 5px darken($orange, 35%),
					   0 0 15px 5px rgba($orange, .2),
					   0 5px 0 2px  rgba(0,0,0,.8),
					   0 10px 20px 3px rgba(0,0,0,.3);

			color:$white;
		}

		&:active
		{
			background-color:$orange;
			@include rem(margin, .5 0 $doubleSpace * 2 - .5 0);
			@include background(linear-gradient($secondaryAccent, lighten($secondaryAccent, 5%)));
			filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#febb33,endColorstr=#fec44d); 
			box-shadow:0 0 0 2px rgba(0,0,0,.8);
		}
	}

	.no-touch .btn--newsletter:hover
	{
		color:$white;
		text-shadow:0 1px 1px rgba($textColor, .8);
	}

	.touch .btn--newsletter:active
	{
		@include rem(margin, .5 0 $doubleSpace * 2 - .5);
		@include background(linear-gradient($secondaryAccent, lighten($secondaryAccent, 5%)));
		box-shadow:0 0 0 2px rgba(0,0,0,.8);	
		color:$white;
		text-shadow:0 1px 1px rgba($textColor, .8);
	}

	.btn--disabled,
	.touch .btn--disabled,
	.no-touch .btn--disabled
	{
		background:$grayVeryLight;
		border-color:$btnDisabledBorderColor;
		box-shadow:none;
		color:$btnDisabledFontColor;
		text-shadow:none;

		&:hover,
		&:active,
		&:focus
		{
			@include rem(margin, 0 0 $singleSpace);
			background:$grayVeryLight;
			box-shadow:none;
			color:$btnDisabledFontColor;
			text-shadow:none;
			cursor:not-allowed;
		}
	}

	.secondary-action
	{
		display:inline-block;
		@include rem(margin, 0 0 $doubleSpace * 2 $singleSpace);
		white-space:nowrap;
	}







